{"version":3,"sources":["index.js"],"names":["E","B","W","N","player1","color","board","selection","options","movePiece","pieceRow","pieceCol","destRow","destCol","position","destination","verticalRange","horizontalRange","Math","abs","say","h","v","intermediateSquare","console","log","renderBoard","i","length","item","document","createElement","className","id","j","innerHTML","row","col","addEventListener","style","background","getElementById","appendChild","t","target"],"mappings":"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","file":"GYST.e31bb0bc.js","sourceRoot":"..","sourcesContent":["var\nE = \"\",\nB = \"X\",\nW = \"O\",\nN = \"N\"\n\nvar player1 = {\n\tcolor: B\n}\n\nvar board = [\n\n  [ E, E, E, E, E ],\n  [ E, B, W, B, E ],\n  [ E, W, N, W, E ],\n  [ E, B, W, B, E ],\n  [ E, E, E, E, E ]\n\n];\n\nvar selection = null;\n\nvar options = [];\n\nvar movePiece = function(pieceRow, pieceCol, destRow, destCol){\n\n\tvar position = board[pieceRow][pieceCol];\n  var destination = board[destRow][destCol];\n\n  if (position){\n    if (position === player1.color || position === N){\n    \tif (destination === E){\n      \n        var verticalRange = destRow - pieceRow;\n        var horizontalRange = destCol - pieceCol;\n\n        if (Math.abs(verticalRange) > 2 || Math.abs(horizontalRange) > 2){\n\n          say(\"That destination is out of range\");\n\n        } else {\n\n          if (Math.abs(horizontalRange) <= 1 && Math.abs(verticalRange) <= 1){\n            say(\"one square away. You can move here!\");\n              board[destRow][destCol] = position\n              board[pieceRow][pieceCol] = E;\n\n          } else {\n\n            var h = horizontalRange / 2;\n            var v = verticalRange / 2;\n\n            if (h % 1 != 0 || v % 1 != 0){\n              say(\"you can only skip other pieces on a true diagonal\")\n            } else {\n              var intermediateSquare = board[pieceRow + v][pieceCol + h];\n\n              if (intermediateSquare != E ){\n                  console.log(\"Two squares away. You may move here! (skip)\");\n                  board[destRow][destCol] = position\n                  board[pieceRow][pieceCol] = E;\n              } else {\n                say(\"You cannot move here because the square in between is empty.\")\n              }\n\n            }\n\n          }\n          \n        }\n        \n\t\t\t} else {\n      \tsay(\"You can't move to that destination because there is a piece already there.\")\n      }\n    } else {\n    \tsay(\"That is not a piece you can move\");\n    }\n  } else {\n    say(\"piece is not defined at \" + pieceRow + \" \" + pieceCol);\n  }\n}\n\n//movePiece(2, 2, 0, 0);\n\n\n\nvar renderBoard = function(){\n\n  for (var i = 0; i < board.length; i++) {\n    for (var j = 0; j < board[0].length; j++){\n\n      const item = document.createElement('div');\n      item.className = \"sq\";\n      item.id = \"sq\" + i + j;\n      item.innerHTML = board[i][j];\n\n      let row = i;\n      let col = j;\n\n      item.addEventListener(\"click\", function(){\n\n        item.style.background = \"orange\";\n\n        if (!selection){\n          console.log(board);\n          selection = [row, col];\n        } else {\n\n          movePiece(selection[0], selection[1], row, col);\n          selection = null;\n          document.getElementById(\"grid-container\").innerHTML = \"\";\n          renderBoard();\n\n        }\n\n      })\n\n      document.getElementById(\"grid-container\").appendChild(item);\n    }\n  }\n}\n\nrenderBoard();\n\nvar say = function(t){\n  var target = document.getElementById(\"message-content\");\n  target.innerHTML = t;\n}"]}